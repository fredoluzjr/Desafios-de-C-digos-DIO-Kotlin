data class Pais(var habitantes: Double, val taxaCrescimento: Double) {
    fun crescerPopulacaoAnual(): Double {
        var result = habitantes + (habitantes * (taxaCrescimento / 100))
        habitantes = result
        //println("Pais.habitantes = $habitantes")
        //println("result = $result")
        return result
      //  TODO("Criar a lógica de crescimento populacional, usando as propriedades do [Pais]")
    }
}

fun main() {
   val habitantesPaisA = readLine()!!.toDouble();
   val habitantesPaisB = readLine()!!.toDouble();
   val paisA = Pais(habitantesPaisA, taxaCrescimento = 3.0)
   val paisB = Pais(habitantesPaisB, taxaCrescimento = 1.5)
   
   var quantidadeAnos = 0
    
   /*paisA.crescerPopulacaoAnual()
   paisB.crescerPopulacaoAnual()
    
   println(paisA.crescerPopulacaoAnual())
   println("Pais B = $paisB")*/
   
   while (paisA.habitantes < paisB.habitantes) {
       paisA.habitantes = paisA.crescerPopulacaoAnual()
       paisB.habitantes = paisB.crescerPopulacaoAnual()
       
       //println(paisA.habitantes)
       //println(paisB.habitantes)
       
       quantidadeAnos++
    //   TODO("Invocar a função que consolida o crescimento anual de cada [Pais]")
    //  TODO("Garantir de a variável mutável $quantidadeAnos seja atualizada")
   }
   
   println("$quantidadeAnos anos")
}
